// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Oficina.Cadastro.Infrastructure;

#nullable disable

namespace Oficina.Cadastro.Infrastructure.Migrations
{
    [DbContext(typeof(CadastroDbContext))]
    partial class CadastroDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.8")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            MySqlModelBuilderExtensions.AutoIncrementColumns(modelBuilder);

            modelBuilder.Entity("Oficina.Cadastro.Domain.Cliente", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<long>("Id"));

                    b.Property<long>("Codigo")
                        .HasColumnType("bigint");

                    b.Property<DateTime>("Created_At")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Documento")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("varchar(20)");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(160)
                        .HasColumnType("varchar(160)");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasMaxLength(160)
                        .HasColumnType("varchar(160)");

                    b.Property<string>("NomeExibicao")
                        .IsRequired()
                        .HasMaxLength(160)
                        .HasColumnType("varchar(160)");

                    b.Property<string>("Observacoes")
                        .HasColumnType("longtext");

                    b.Property<int>("OrigemCadastroId")
                        .HasColumnType("int");

                    b.Property<long?>("Origem_Id")
                        .HasColumnType("bigint");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.Property<string>("Telefone")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("varchar(20)");

                    b.Property<int>("Tipo")
                        .HasColumnType("int");

                    b.Property<DateTime?>("Updated_At")
                        .HasColumnType("datetime(6)");

                    b.Property<bool>("Vip")
                        .HasColumnType("tinyint(1)");

                    b.HasKey("Id");

                    b.HasIndex("Documento")
                        .IsUnique();

                    b.HasIndex("Origem_Id");

                    b.ToTable("cad_clientes", (string)null);
                });

            modelBuilder.Entity("Oficina.Cadastro.Domain.ClienteAnexo", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<long>("Id"));

                    b.Property<long?>("ClienteId")
                        .HasColumnType("bigint");

                    b.Property<long>("Cliente_Id")
                        .HasColumnType("bigint");

                    b.Property<DateTime>("Created_At")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)");

                    b.Property<string>("Observacao")
                        .HasMaxLength(240)
                        .HasColumnType("varchar(240)");

                    b.Property<string>("Tipo")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)");

                    b.Property<DateTime?>("Updated_At")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Url")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("varchar(500)");

                    b.HasKey("Id");

                    b.HasIndex("ClienteId");

                    b.HasIndex("Cliente_Id", "Nome")
                        .IsUnique();

                    b.ToTable("cad_clientes_anexos", (string)null);
                });

            modelBuilder.Entity("Oficina.Cadastro.Domain.ClienteConsentimento", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<long>("Id"));

                    b.Property<bool>("Aceito")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("Canal")
                        .IsRequired()
                        .HasMaxLength(80)
                        .HasColumnType("varchar(80)");

                    b.Property<long>("Cliente_Id")
                        .HasColumnType("bigint");

                    b.Property<DateTime>("Created_At")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime?>("Data")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Observacoes")
                        .HasMaxLength(240)
                        .HasColumnType("varchar(240)");

                    b.Property<int>("Tipo")
                        .HasColumnType("int");

                    b.Property<DateTime?>("Updated_At")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime?>("Valido_Ate")
                        .HasColumnType("datetime(6)");

                    b.HasKey("Id");

                    b.HasIndex("Cliente_Id")
                        .IsUnique();

                    b.ToTable("cad_clientes_lgpd_consentimentos", (string)null);
                });

            modelBuilder.Entity("Oficina.Cadastro.Domain.ClienteContato", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<long>("Id"));

                    b.Property<long>("Cliente_Id")
                        .HasColumnType("bigint");

                    b.Property<DateTime>("Created_At")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Observacao")
                        .HasMaxLength(240)
                        .HasColumnType("varchar(240)");

                    b.Property<bool>("Principal")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("tinyint(1)")
                        .HasDefaultValue(false);

                    b.Property<int>("Tipo")
                        .HasMaxLength(40)
                        .HasColumnType("int");

                    b.Property<DateTime?>("Updated_At")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Valor")
                        .IsRequired()
                        .HasMaxLength(160)
                        .HasColumnType("varchar(160)");

                    b.HasKey("Id");

                    b.HasIndex("Cliente_Id", "Tipo", "Valor")
                        .IsUnique();

                    b.ToTable("cad_clientes_contatos", (string)null);
                });

            modelBuilder.Entity("Oficina.Cadastro.Domain.ClienteEndereco", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<long>("Id"));

                    b.Property<string>("Bairro")
                        .IsRequired()
                        .HasMaxLength(120)
                        .HasColumnType("varchar(120)");

                    b.Property<string>("Cep")
                        .IsRequired()
                        .HasMaxLength(12)
                        .HasColumnType("varchar(12)");

                    b.Property<string>("Cidade")
                        .IsRequired()
                        .HasMaxLength(120)
                        .HasColumnType("varchar(120)");

                    b.Property<long>("Cliente_Id")
                        .HasColumnType("bigint");

                    b.Property<string>("Complemento")
                        .HasMaxLength(120)
                        .HasColumnType("varchar(120)");

                    b.Property<DateTime>("Created_At")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Estado")
                        .IsRequired()
                        .HasMaxLength(60)
                        .HasColumnType("varchar(60)");

                    b.Property<string>("Logradouro")
                        .IsRequired()
                        .HasMaxLength(160)
                        .HasColumnType("varchar(160)");

                    b.Property<string>("Numero")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("varchar(20)");

                    b.Property<string>("Pais")
                        .IsRequired()
                        .HasMaxLength(80)
                        .HasColumnType("varchar(80)");

                    b.Property<bool>("Principal")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("tinyint(1)")
                        .HasDefaultValue(false);

                    b.Property<int>("Tipo")
                        .HasMaxLength(40)
                        .HasColumnType("int");

                    b.Property<DateTime?>("Updated_At")
                        .HasColumnType("datetime(6)");

                    b.HasKey("Id");

                    b.HasIndex("Cliente_Id", "Tipo", "Principal");

                    b.ToTable("cad_clientes_enderecos", (string)null);
                });

            modelBuilder.Entity("Oficina.Cadastro.Domain.ClienteFinanceiro", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<long>("Id"));

                    b.Property<bool>("Bloqueado")
                        .HasColumnType("tinyint(1)");

                    b.Property<long>("Cliente_Id")
                        .HasColumnType("bigint");

                    b.Property<DateTime>("Created_At")
                        .HasColumnType("datetime(6)");

                    b.Property<decimal>("Limite_Credito")
                        .HasColumnType("decimal(10,2)");

                    b.Property<string>("Observacoes")
                        .HasMaxLength(500)
                        .HasColumnType("varchar(500)");

                    b.Property<int?>("Prazo_Pagamento")
                        .HasColumnType("int");

                    b.Property<DateTime?>("Updated_At")
                        .HasColumnType("datetime(6)");

                    b.HasKey("Id");

                    b.HasIndex("Cliente_Id")
                        .IsUnique();

                    b.ToTable("cad_clientes_financeiro", (string)null);
                });

            modelBuilder.Entity("Oficina.Cadastro.Domain.ClienteIndicacao", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<long>("Id"));

                    b.Property<long>("Cliente_Id")
                        .HasColumnType("bigint");

                    b.Property<DateTime>("Created_At")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Indicador_Nome")
                        .IsRequired()
                        .HasMaxLength(160)
                        .HasColumnType("varchar(160)");

                    b.Property<string>("Indicador_Telefone")
                        .HasMaxLength(20)
                        .HasColumnType("varchar(20)");

                    b.Property<string>("Observacao")
                        .HasMaxLength(240)
                        .HasColumnType("varchar(240)");

                    b.Property<DateTime?>("Updated_At")
                        .HasColumnType("datetime(6)");

                    b.HasKey("Id");

                    b.HasIndex("Cliente_Id");

                    b.ToTable("cad_clientes_indicacoes", (string)null);
                });

            modelBuilder.Entity("Oficina.Cadastro.Domain.ClienteOrigem", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<long>("Id"));

                    b.Property<DateTime>("Created_At")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Descricao")
                        .HasMaxLength(240)
                        .HasColumnType("varchar(240)");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasMaxLength(120)
                        .HasColumnType("varchar(120)");

                    b.Property<DateTime?>("Updated_At")
                        .HasColumnType("datetime(6)");

                    b.HasKey("Id");

                    b.HasIndex("Nome")
                        .IsUnique();

                    b.ToTable("cad_clientes_origens", (string)null);
                });

            modelBuilder.Entity("Oficina.Cadastro.Domain.ClientePessoaFisica", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<long>("Id"));

                    b.Property<long>("Cliente_Id")
                        .HasColumnType("bigint");

                    b.Property<string>("Cpf")
                        .IsRequired()
                        .HasMaxLength(14)
                        .HasColumnType("varchar(14)");

                    b.Property<DateTime>("Created_At")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime?>("Data_Nascimento")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Estado_Civil")
                        .HasMaxLength(20)
                        .HasColumnType("varchar(20)");

                    b.Property<string>("Genero")
                        .HasMaxLength(30)
                        .HasColumnType("varchar(30)");

                    b.Property<string>("Profissao")
                        .HasMaxLength(120)
                        .HasColumnType("varchar(120)");

                    b.Property<string>("Rg")
                        .HasMaxLength(20)
                        .HasColumnType("varchar(20)");

                    b.Property<DateTime?>("Updated_At")
                        .HasColumnType("datetime(6)");

                    b.HasKey("Id");

                    b.HasIndex("Cliente_Id")
                        .IsUnique();

                    b.ToTable("cad_clientes_pf", (string)null);
                });

            modelBuilder.Entity("Oficina.Cadastro.Domain.ClientePessoaJuridica", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<long>("Id"));

                    b.Property<long>("Cliente_Id")
                        .HasColumnType("bigint");

                    b.Property<string>("Cnpj")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("varchar(20)");

                    b.Property<DateTime>("Created_At")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Inscricao_Estadual")
                        .HasMaxLength(30)
                        .HasColumnType("varchar(30)");

                    b.Property<string>("Inscricao_Municipal")
                        .HasMaxLength(30)
                        .HasColumnType("varchar(30)");

                    b.Property<string>("Nome_Fantasia")
                        .HasMaxLength(180)
                        .HasColumnType("varchar(180)");

                    b.Property<string>("Razao_Social")
                        .IsRequired()
                        .HasMaxLength(180)
                        .HasColumnType("varchar(180)");

                    b.Property<string>("Responsavel")
                        .HasMaxLength(120)
                        .HasColumnType("varchar(120)");

                    b.Property<DateTime?>("Updated_At")
                        .HasColumnType("datetime(6)");

                    b.HasKey("Id");

                    b.HasIndex("Cliente_Id")
                        .IsUnique();

                    b.ToTable("cad_clientes_pj", (string)null);
                });

            modelBuilder.Entity("Oficina.Cadastro.Domain.ClienteVeiculo", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<long>("Id"));

                    b.Property<int?>("Ano")
                        .HasColumnType("int");

                    b.Property<string>("Chassi")
                        .HasMaxLength(40)
                        .HasColumnType("varchar(40)");

                    b.Property<long>("Cliente_Id")
                        .HasColumnType("bigint");

                    b.Property<string>("Combustivel")
                        .HasMaxLength(40)
                        .HasColumnType("varchar(40)");

                    b.Property<string>("Cor")
                        .HasMaxLength(40)
                        .HasColumnType("varchar(40)");

                    b.Property<DateTime>("Created_At")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Marca")
                        .HasColumnType("longtext");

                    b.Property<long?>("Modelo_Id")
                        .HasColumnType("bigint");

                    b.Property<string>("Observacao")
                        .HasMaxLength(240)
                        .HasColumnType("varchar(240)");

                    b.Property<string>("Placa")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("varchar(10)");

                    b.Property<bool>("Principal")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("Renavam")
                        .HasMaxLength(20)
                        .HasColumnType("varchar(20)");

                    b.Property<DateTime?>("Updated_At")
                        .HasColumnType("datetime(6)");

                    b.HasKey("Id");

                    b.HasIndex("Cliente_Id");

                    b.HasIndex("Modelo_Id");

                    b.HasIndex("Placa")
                        .IsUnique();

                    b.HasIndex("Renavam")
                        .IsUnique()
                        .HasFilter("Renavam IS NOT NULL");

                    b.ToTable("cad_veiculos", (string)null);
                });

            modelBuilder.Entity("Oficina.Cadastro.Domain.Fornecedor", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<long>("Id"));

                    b.Property<string>("Cnpj")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("varchar(20)");

                    b.Property<string>("Contato")
                        .IsRequired()
                        .HasMaxLength(160)
                        .HasColumnType("varchar(160)");

                    b.Property<DateTime>("Created_At")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Razao_Social")
                        .IsRequired()
                        .HasMaxLength(160)
                        .HasColumnType("varchar(160)");

                    b.Property<DateTime?>("Updated_At")
                        .HasColumnType("datetime(6)");

                    b.HasKey("Id");

                    b.HasIndex("Cnpj")
                        .IsUnique();

                    b.ToTable("cad_fornecedores", (string)null);
                });

            modelBuilder.Entity("Oficina.Cadastro.Domain.Mecanico", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<long>("Id"));

                    b.Property<bool>("Ativo")
                        .HasColumnType("tinyint(1)");

                    b.Property<DateTime>("Created_At")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Especialidade")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasMaxLength(120)
                        .HasColumnType("varchar(120)");

                    b.Property<DateTime?>("Updated_At")
                        .HasColumnType("datetime(6)");

                    b.HasKey("Id");

                    b.ToTable("cad_mecanicos", (string)null);
                });

            modelBuilder.Entity("Oficina.Cadastro.Domain.VeiculoMarca", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<long>("Id"));

                    b.Property<DateTime>("Created_At")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasMaxLength(120)
                        .HasColumnType("varchar(120)");

                    b.Property<string>("Pais")
                        .HasMaxLength(80)
                        .HasColumnType("varchar(80)");

                    b.Property<DateTime?>("Updated_At")
                        .HasColumnType("datetime(6)");

                    b.HasKey("Id");

                    b.HasIndex("Nome")
                        .IsUnique();

                    b.ToTable("cad_veiculos_marcas", (string)null);
                });

            modelBuilder.Entity("Oficina.Cadastro.Domain.VeiculoModelo", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<long>("Id"));

                    b.Property<int?>("Ano_Fim")
                        .HasColumnType("int");

                    b.Property<int?>("Ano_Inicio")
                        .HasColumnType("int");

                    b.Property<DateTime>("Created_At")
                        .HasColumnType("datetime(6)");

                    b.Property<long>("Marca_Id")
                        .HasColumnType("bigint");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasMaxLength(160)
                        .HasColumnType("varchar(160)");

                    b.Property<DateTime?>("Updated_At")
                        .HasColumnType("datetime(6)");

                    b.HasKey("Id");

                    b.HasIndex("Marca_Id", "Nome")
                        .IsUnique();

                    b.ToTable("cad_veiculos_modelos", (string)null);
                });

            modelBuilder.Entity("Oficina.Cadastro.Domain.Cliente", b =>
                {
                    b.HasOne("Oficina.Cadastro.Domain.ClienteOrigem", "Origem")
                        .WithMany("Clientes")
                        .HasForeignKey("Origem_Id")
                        .OnDelete(DeleteBehavior.SetNull);

                    b.Navigation("Origem");
                });

            modelBuilder.Entity("Oficina.Cadastro.Domain.ClienteAnexo", b =>
                {
                    b.HasOne("Oficina.Cadastro.Domain.Cliente", null)
                        .WithMany("Anexos")
                        .HasForeignKey("ClienteId");
                });

            modelBuilder.Entity("Oficina.Cadastro.Domain.ClienteConsentimento", b =>
                {
                    b.HasOne("Oficina.Cadastro.Domain.Cliente", "Cliente")
                        .WithOne("Consentimento")
                        .HasForeignKey("Oficina.Cadastro.Domain.ClienteConsentimento", "Cliente_Id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Cliente");
                });

            modelBuilder.Entity("Oficina.Cadastro.Domain.ClienteContato", b =>
                {
                    b.HasOne("Oficina.Cadastro.Domain.Cliente", "Cliente")
                        .WithMany("Contatos")
                        .HasForeignKey("Cliente_Id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Cliente");
                });

            modelBuilder.Entity("Oficina.Cadastro.Domain.ClienteEndereco", b =>
                {
                    b.HasOne("Oficina.Cadastro.Domain.Cliente", "Cliente")
                        .WithMany("Enderecos")
                        .HasForeignKey("Cliente_Id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Cliente");
                });

            modelBuilder.Entity("Oficina.Cadastro.Domain.ClienteFinanceiro", b =>
                {
                    b.HasOne("Oficina.Cadastro.Domain.Cliente", "Cliente")
                        .WithOne("Financeiro")
                        .HasForeignKey("Oficina.Cadastro.Domain.ClienteFinanceiro", "Cliente_Id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Cliente");
                });

            modelBuilder.Entity("Oficina.Cadastro.Domain.ClienteIndicacao", b =>
                {
                    b.HasOne("Oficina.Cadastro.Domain.Cliente", "Cliente")
                        .WithMany("Indicacoes")
                        .HasForeignKey("Cliente_Id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Cliente");
                });

            modelBuilder.Entity("Oficina.Cadastro.Domain.ClientePessoaFisica", b =>
                {
                    b.HasOne("Oficina.Cadastro.Domain.Cliente", null)
                        .WithOne("PessoaFisica")
                        .HasForeignKey("Oficina.Cadastro.Domain.ClientePessoaFisica", "Cliente_Id")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("Oficina.Cadastro.Domain.ClientePessoaJuridica", b =>
                {
                    b.HasOne("Oficina.Cadastro.Domain.Cliente", null)
                        .WithOne("PessoaJuridica")
                        .HasForeignKey("Oficina.Cadastro.Domain.ClientePessoaJuridica", "Cliente_Id")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("Oficina.Cadastro.Domain.ClienteVeiculo", b =>
                {
                    b.HasOne("Oficina.Cadastro.Domain.Cliente", "Cliente")
                        .WithMany("Veiculos")
                        .HasForeignKey("Cliente_Id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Oficina.Cadastro.Domain.VeiculoModelo", "Modelo")
                        .WithMany("Veiculos")
                        .HasForeignKey("Modelo_Id")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.Navigation("Cliente");

                    b.Navigation("Modelo");
                });

            modelBuilder.Entity("Oficina.Cadastro.Domain.VeiculoModelo", b =>
                {
                    b.HasOne("Oficina.Cadastro.Domain.VeiculoMarca", "Marca")
                        .WithMany("Modelos")
                        .HasForeignKey("Marca_Id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Marca");
                });

            modelBuilder.Entity("Oficina.Cadastro.Domain.Cliente", b =>
                {
                    b.Navigation("Anexos");

                    b.Navigation("Consentimento");

                    b.Navigation("Contatos");

                    b.Navigation("Enderecos");

                    b.Navigation("Financeiro");

                    b.Navigation("Indicacoes");

                    b.Navigation("PessoaFisica");

                    b.Navigation("PessoaJuridica");

                    b.Navigation("Veiculos");
                });

            modelBuilder.Entity("Oficina.Cadastro.Domain.ClienteOrigem", b =>
                {
                    b.Navigation("Clientes");
                });

            modelBuilder.Entity("Oficina.Cadastro.Domain.VeiculoMarca", b =>
                {
                    b.Navigation("Modelos");
                });

            modelBuilder.Entity("Oficina.Cadastro.Domain.VeiculoModelo", b =>
                {
                    b.Navigation("Veiculos");
                });
#pragma warning restore 612, 618
        }
    }
}
